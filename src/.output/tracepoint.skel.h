/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __TRACEPOINT_BPF_SKEL_H__
#define __TRACEPOINT_BPF_SKEL_H__

#include <stdlib.h>
#include <bpf/libbpf.h>

struct tracepoint_bpf {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *rodata;
	} maps;
	struct {
		struct bpf_program *tp_sys_enter_openat;
		struct bpf_program *tp_sys_exit_openat;
	} progs;
	struct {
		struct bpf_link *tp_sys_enter_openat;
		struct bpf_link *tp_sys_exit_openat;
	} links;
	struct tracepoint_bpf__rodata {
		char tp_sys_enter_openat_____fmt[34];
		char tp_sys_exit_openat_____fmt[30];
	} *rodata;
};

static void
tracepoint_bpf__destroy(struct tracepoint_bpf *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
tracepoint_bpf__create_skeleton(struct tracepoint_bpf *obj);

static inline struct tracepoint_bpf *
tracepoint_bpf__open_opts(const struct bpf_object_open_opts *opts)
{
	struct tracepoint_bpf *obj;

	obj = (struct tracepoint_bpf *)calloc(1, sizeof(*obj));
	if (!obj)
		return NULL;
	if (tracepoint_bpf__create_skeleton(obj))
		goto err;
	if (bpf_object__open_skeleton(obj->skeleton, opts))
		goto err;

	return obj;
err:
	tracepoint_bpf__destroy(obj);
	return NULL;
}

static inline struct tracepoint_bpf *
tracepoint_bpf__open(void)
{
	return tracepoint_bpf__open_opts(NULL);
}

static inline int
tracepoint_bpf__load(struct tracepoint_bpf *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct tracepoint_bpf *
tracepoint_bpf__open_and_load(void)
{
	struct tracepoint_bpf *obj;

	obj = tracepoint_bpf__open();
	if (!obj)
		return NULL;
	if (tracepoint_bpf__load(obj)) {
		tracepoint_bpf__destroy(obj);
		return NULL;
	}
	return obj;
}

static inline int
tracepoint_bpf__attach(struct tracepoint_bpf *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
tracepoint_bpf__detach(struct tracepoint_bpf *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline int
tracepoint_bpf__create_skeleton(struct tracepoint_bpf *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		return -1;
	obj->skeleton = s;

	s->sz = sizeof(*s);
	s->name = "tracepoint_bpf";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 1;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps)
		goto err;

	s->maps[0].name = "tracepoi.rodata";
	s->maps[0].map = &obj->maps.rodata;
	s->maps[0].mmaped = (void **)&obj->rodata;

	/* programs */
	s->prog_cnt = 2;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "tp_sys_enter_openat";
	s->progs[0].prog = &obj->progs.tp_sys_enter_openat;
	s->progs[0].link = &obj->links.tp_sys_enter_openat;

	s->progs[1].name = "tp_sys_exit_openat";
	s->progs[1].prog = &obj->progs.tp_sys_exit_openat;
	s->progs[1].link = &obj->links.tp_sys_exit_openat;

	s->data_sz = 4192;
	s->data = (void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xa0\x0c\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x0f\0\
\x0e\0\xbf\x17\0\0\0\0\0\0\x85\0\0\0\x0e\0\0\0\xbf\x06\0\0\0\0\0\0\xb7\x01\0\0\
\0\0\0\0\x7b\x1a\xf8\xff\0\0\0\0\x7b\x1a\xf0\xff\0\0\0\0\x7b\x1a\xe8\xff\0\0\0\
\0\x7b\x1a\xe0\xff\0\0\0\0\x7b\x1a\xd8\xff\0\0\0\0\x7b\x1a\xd0\xff\0\0\0\0\x7b\
\x1a\xc8\xff\0\0\0\0\x7b\x1a\xc0\xff\0\0\0\0\x7b\x1a\xb8\xff\0\0\0\0\x7b\x1a\
\xb0\xff\0\0\0\0\x7b\x1a\xa8\xff\0\0\0\0\x7b\x1a\xa0\xff\0\0\0\0\x7b\x1a\x98\
\xff\0\0\0\0\x7b\x1a\x90\xff\0\0\0\0\x7b\x1a\x88\xff\0\0\0\0\x7b\x1a\x80\xff\0\
\0\0\0\x7b\x1a\x78\xff\0\0\0\0\x7b\x1a\x70\xff\0\0\0\0\x7b\x1a\x68\xff\0\0\0\0\
\x7b\x1a\x60\xff\0\0\0\0\x7b\x1a\x58\xff\0\0\0\0\x7b\x1a\x50\xff\0\0\0\0\x7b\
\x1a\x48\xff\0\0\0\0\x7b\x1a\x40\xff\0\0\0\0\x7b\x1a\x38\xff\0\0\0\0\x7b\x1a\
\x30\xff\0\0\0\0\x7b\x1a\x28\xff\0\0\0\0\x7b\x1a\x20\xff\0\0\0\0\x7b\x1a\x18\
\xff\0\0\0\0\x7b\x1a\x10\xff\0\0\0\0\x7b\x1a\x08\xff\0\0\0\0\x7b\x1a\0\xff\0\0\
\0\0\x79\x73\x18\0\0\0\0\0\xbf\xa7\0\0\0\0\0\0\x07\x07\0\0\0\xff\xff\xff\xbf\
\x71\0\0\0\0\0\0\xb7\x02\0\0\0\x01\0\0\x85\0\0\0\x70\0\0\0\x77\x06\0\0\x20\0\0\
\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\x22\0\0\0\xbf\x63\0\0\0\0\0\
\0\xbf\x74\0\0\0\0\0\0\x85\0\0\0\x06\0\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\
\xbf\x16\0\0\0\0\0\0\x85\0\0\0\x0e\0\0\0\x79\x64\x10\0\0\0\0\0\x77\0\0\0\x20\0\
\0\0\x18\x01\0\0\x22\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\x1e\0\0\0\xbf\x03\0\0\0\
\0\0\0\x85\0\0\0\x06\0\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\x44\x75\x61\x6c\
\x20\x42\x53\x44\x2f\x47\x50\x4c\0\x54\x50\x20\x45\x4e\x54\x52\x59\x20\x70\x69\
\x64\x20\x3d\x20\x25\x64\x2c\x20\x66\x69\x6c\x65\x6e\x61\x6d\x65\x20\x3d\x20\
\x25\x73\x0a\0\x54\x50\x20\x45\x58\x49\x54\x3a\x20\x70\x69\x64\x20\x3d\x20\x25\
\x64\x2c\x20\x72\x65\x74\x20\x3d\x20\x25\x6c\x64\x0a\0\x9f\xeb\x01\0\x18\0\0\0\
\0\0\0\0\x30\x02\0\0\x30\x02\0\0\x63\x03\0\0\0\0\0\0\0\0\0\x02\x02\0\0\0\x01\0\
\0\0\x07\0\0\x04\x28\0\0\0\x16\0\0\0\x03\0\0\0\0\0\0\0\x22\0\0\0\x04\0\0\0\x40\
\0\0\0\x2f\0\0\0\x05\0\0\0\x60\0\0\0\x37\0\0\0\x04\0\0\0\x80\0\0\0\x3b\0\0\0\
\x06\0\0\0\xc0\0\0\0\x44\0\0\0\x05\0\0\0\0\x01\0\0\x4a\0\0\0\x08\0\0\0\x20\x01\
\0\0\x4f\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\0\x66\0\0\0\0\0\0\x01\x04\0\0\0\x20\
\0\0\x01\x6a\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x02\x07\0\0\0\
\x77\0\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\x7c\0\0\0\0\0\0\x08\x09\0\0\0\x84\0\
\0\0\0\0\0\x01\x02\0\0\0\x10\0\0\0\0\0\0\0\x01\0\0\x0d\x04\0\0\0\x93\0\0\0\x01\
\0\0\0\x97\0\0\0\x01\0\0\x0c\x0a\0\0\0\0\0\0\0\0\0\0\x02\x0d\0\0\0\x12\x02\0\0\
\x03\0\0\x04\x18\0\0\0\x26\x02\0\0\x03\0\0\0\0\0\0\0\x22\0\0\0\x04\0\0\0\x40\0\
\0\0\x32\x02\0\0\x0e\0\0\0\x80\0\0\0\x36\x02\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\
\x01\0\0\0\0\x01\0\0\x0d\x04\0\0\0\x93\0\0\0\x0c\0\0\0\x3f\x02\0\0\x01\0\0\x0c\
\x0f\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x07\0\0\0\x12\0\0\0\x0d\0\0\0\0\x03\0\0\0\
\0\0\x01\x04\0\0\0\x20\0\0\0\x14\x03\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\x0a\x07\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x14\0\0\0\x12\0\0\0\x22\0\0\0\
\x1c\x03\0\0\0\0\0\x0e\x15\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x14\0\0\0\
\x12\0\0\0\x1e\0\0\0\x38\x03\0\0\0\0\0\x0e\x17\0\0\0\0\0\0\0\x53\x03\0\0\x02\0\
\0\x0f\0\0\0\0\x16\0\0\0\0\0\0\0\x22\0\0\0\x18\0\0\0\x22\0\0\0\x1e\0\0\0\x5b\
\x03\0\0\x01\0\0\x0f\0\0\0\0\x13\0\0\0\0\0\0\0\x0d\0\0\0\0\x73\x79\x73\x5f\x6f\
\x70\x65\x6e\x61\x74\x5f\x65\x6e\x74\x65\x72\x5f\x63\x74\x78\0\x70\x72\x5f\x72\
\x65\x67\x73\x5f\x70\x74\x72\0\x5f\x5f\x73\x79\x73\x63\x61\x6c\x6c\x5f\x6e\x72\
\0\x70\x61\x64\x64\x69\x6e\x67\0\x64\x66\x64\0\x66\x69\x6c\x65\x6e\x61\x6d\x65\
\0\x66\x6c\x61\x67\x73\0\x6d\x6f\x64\x65\0\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\
\x20\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x69\x6e\x74\0\x75\x6e\
\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x63\x68\x61\x72\0\x75\x6d\x6f\x64\
\x65\x5f\x74\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\x74\0\x63\
\x74\x78\0\x74\x70\x5f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x6f\x70\x65\x6e\
\x61\x74\0\x74\x70\x2f\x73\x79\x73\x63\x61\x6c\x6c\x73\x2f\x73\x79\x73\x5f\x65\
\x6e\x74\x65\x72\x5f\x6f\x70\x65\x6e\x61\x74\0\x2f\x68\x6f\x6d\x65\x2f\x68\x33\
\x78\x64\x75\x63\x6b\x2f\x65\x62\x70\x66\x2d\x65\x78\x61\x6d\x70\x6c\x65\x73\
\x2f\x73\x72\x63\x2f\x65\x62\x70\x66\x2f\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\
\x74\x2e\x62\x70\x66\x2e\x63\0\x69\x6e\x74\x20\x74\x70\x5f\x73\x79\x73\x5f\x65\
\x6e\x74\x65\x72\x5f\x6f\x70\x65\x6e\x61\x74\x28\x73\x74\x72\x75\x63\x74\x20\
\x73\x79\x73\x5f\x6f\x70\x65\x6e\x61\x74\x5f\x65\x6e\x74\x65\x72\x5f\x63\x74\
\x78\x20\x2a\x63\x74\x78\x29\x7b\0\x09\x70\x69\x64\x20\x3d\x20\x62\x70\x66\x5f\
\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\x70\x69\x64\x5f\x74\x67\x69\
\x64\x28\x29\x20\x3e\x3e\x20\x33\x32\x3b\0\x20\x20\x20\x20\x63\x68\x61\x72\x20\
\x66\x69\x6c\x65\x6e\x61\x6d\x65\x5b\x32\x35\x36\x5d\x20\x3d\x20\x7b\x30\x7d\
\x3b\0\x20\x20\x20\x20\x62\x70\x66\x5f\x70\x72\x6f\x62\x65\x5f\x72\x65\x61\x64\
\x5f\x75\x73\x65\x72\x28\x26\x66\x69\x6c\x65\x6e\x61\x6d\x65\x2c\x20\x32\x35\
\x36\x2c\x20\x28\x63\x68\x61\x72\x2a\x29\x63\x74\x78\x2d\x3e\x66\x69\x6c\x65\
\x6e\x61\x6d\x65\x29\x3b\0\x20\x20\x20\x20\x62\x70\x66\x5f\x70\x72\x69\x6e\x74\
\x6b\x28\x22\x54\x50\x20\x45\x4e\x54\x52\x59\x20\x70\x69\x64\x20\x3d\x20\x25\
\x64\x2c\x20\x66\x69\x6c\x65\x6e\x61\x6d\x65\x20\x3d\x20\x25\x73\x5c\x6e\x22\
\x2c\x20\x70\x69\x64\x2c\x20\x66\x69\x6c\x65\x6e\x61\x6d\x65\x29\x3b\0\x20\x20\
\x20\x20\x72\x65\x74\x75\x72\x6e\x20\x30\x3b\0\x73\x79\x73\x5f\x6f\x70\x65\x6e\
\x61\x74\x5f\x65\x78\x69\x74\x5f\x63\x74\x78\0\x70\x74\x5f\x72\x65\x67\x73\x5f\
\x70\x74\x72\0\x72\x65\x74\0\x6c\x6f\x6e\x67\x20\x69\x6e\x74\0\x74\x70\x5f\x73\
\x79\x73\x5f\x65\x78\x69\x74\x5f\x6f\x70\x65\x6e\x61\x74\0\x74\x70\x2f\x73\x79\
\x73\x63\x61\x6c\x6c\x73\x2f\x73\x79\x73\x5f\x65\x78\x69\x74\x5f\x6f\x70\x65\
\x6e\x61\x74\0\x69\x6e\x74\x20\x74\x70\x5f\x73\x79\x73\x5f\x65\x78\x69\x74\x5f\
\x6f\x70\x65\x6e\x61\x74\x28\x73\x74\x72\x75\x63\x74\x20\x73\x79\x73\x5f\x6f\
\x70\x65\x6e\x61\x74\x5f\x65\x78\x69\x74\x5f\x63\x74\x78\x20\x2a\x63\x74\x78\
\x29\x7b\0\x20\x20\x20\x20\x69\x6e\x74\x20\x72\x65\x74\x5f\x76\x61\x6c\x20\x3d\
\x20\x63\x74\x78\x2d\x3e\x72\x65\x74\x3b\0\x09\x62\x70\x66\x5f\x70\x72\x69\x6e\
\x74\x6b\x28\x22\x54\x50\x20\x45\x58\x49\x54\x3a\x20\x70\x69\x64\x20\x3d\x20\
\x25\x64\x2c\x20\x72\x65\x74\x20\x3d\x20\x25\x6c\x64\x5c\x6e\x22\x2c\x20\x70\
\x69\x64\x2c\x20\x72\x65\x74\x5f\x76\x61\x6c\x29\x3b\0\x5f\x5f\x41\x52\x52\x41\
\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x4c\x49\x43\x45\x4e\x53\
\x45\0\x74\x70\x5f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x6f\x70\x65\x6e\x61\
\x74\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\0\x74\x70\x5f\x73\x79\x73\x5f\x65\x78\x69\
\x74\x5f\x6f\x70\x65\x6e\x61\x74\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\0\x2e\x72\x6f\
\x64\x61\x74\x61\0\x6c\x69\x63\x65\x6e\x73\x65\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\
\0\x24\0\0\0\x24\0\0\0\x04\x01\0\0\x28\x01\0\0\0\0\0\0\x08\0\0\0\xab\0\0\0\x01\
\0\0\0\0\0\0\0\x0b\0\0\0\x52\x02\0\0\x01\0\0\0\0\0\0\0\x10\0\0\0\x10\0\0\0\xab\
\0\0\0\x09\0\0\0\0\0\0\0\xc8\0\0\0\xfe\0\0\0\0\x8c\0\0\x08\0\0\0\xc8\0\0\0\x39\
\x01\0\0\x08\x94\0\0\x20\0\0\0\xc8\0\0\0\x62\x01\0\0\x0a\x9c\0\0\x20\x01\0\0\
\xc8\0\0\0\x80\x01\0\0\x35\xa0\0\0\x30\x01\0\0\xc8\0\0\0\0\0\0\0\0\0\0\0\x38\
\x01\0\0\xc8\0\0\0\x80\x01\0\0\x05\xa0\0\0\x50\x01\0\0\xc8\0\0\0\x39\x01\0\0\
\x23\x94\0\0\x58\x01\0\0\xc8\0\0\0\xbf\x01\0\0\x05\xa8\0\0\x88\x01\0\0\xc8\0\0\
\0\x04\x02\0\0\x05\xb0\0\0\x52\x02\0\0\x06\0\0\0\0\0\0\0\xc8\0\0\0\x6e\x02\0\0\
\0\xc0\0\0\x08\0\0\0\xc8\0\0\0\x39\x01\0\0\x08\xc8\0\0\x10\0\0\0\xc8\0\0\0\xa7\
\x02\0\0\x18\xd0\0\0\x18\0\0\0\xc8\0\0\0\x39\x01\0\0\x23\xc8\0\0\x20\0\0\0\xc8\
\0\0\0\xc3\x02\0\0\x02\xd4\0\0\x48\0\0\0\xc8\0\0\0\x04\x02\0\0\x05\xdc\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x2f\0\0\0\x01\0\x05\0\0\0\0\0\0\0\
\0\0\x22\0\0\0\0\0\0\0\x14\0\0\0\x01\0\x05\0\x22\0\0\0\0\0\0\0\x1e\0\0\0\0\0\0\
\0\0\0\0\0\x03\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\xea\0\0\0\x11\0\x04\0\0\0\0\0\0\0\0\0\x0d\0\0\0\0\0\0\0\x7e\0\0\0\x12\0\x02\
\0\0\0\0\0\0\0\0\0\x98\x01\0\0\0\0\0\0\x4b\0\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\
\x58\0\0\0\0\0\0\0\x58\x01\0\0\0\0\0\0\x01\0\0\0\x05\0\0\0\x20\0\0\0\0\0\0\0\
\x01\0\0\0\x05\0\0\0\x1c\x02\0\0\0\0\0\0\x0a\0\0\0\x05\0\0\0\x28\x02\0\0\0\0\0\
\0\x0a\0\0\0\x05\0\0\0\x40\x02\0\0\0\0\0\0\0\0\0\0\x06\0\0\0\x2c\0\0\0\0\0\0\0\
\0\0\0\0\x03\0\0\0\x3c\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\x50\0\0\0\0\0\0\0\0\0\0\
\0\x03\0\0\0\x60\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\x70\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\x90\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\
\xa0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\xb0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\xc0\0\
\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\xd0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\xe8\0\0\0\0\
\0\0\0\0\0\0\0\x04\0\0\0\xf8\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\x08\x01\0\0\0\0\0\
\0\0\0\0\0\x04\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\x28\x01\0\0\0\0\0\0\
\0\0\0\0\x04\0\0\0\x38\x01\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\x0e\x0f\x0d\x02\x03\0\
\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\x74\0\x74\
\x70\x5f\x73\x79\x73\x5f\x65\x78\x69\x74\x5f\x6f\x70\x65\x6e\x61\x74\x2e\x5f\
\x5f\x5f\x5f\x66\x6d\x74\0\x74\x70\x5f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\
\x6f\x70\x65\x6e\x61\x74\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\0\x74\x70\x5f\x73\x79\
\x73\x5f\x65\x78\x69\x74\x5f\x6f\x70\x65\x6e\x61\x74\0\x2e\x72\x65\x6c\x74\x70\
\x2f\x73\x79\x73\x63\x61\x6c\x6c\x73\x2f\x73\x79\x73\x5f\x65\x78\x69\x74\x5f\
\x6f\x70\x65\x6e\x61\x74\0\x74\x70\x5f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\
\x6f\x70\x65\x6e\x61\x74\0\x2e\x72\x65\x6c\x74\x70\x2f\x73\x79\x73\x63\x61\x6c\
\x6c\x73\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x6f\x70\x65\x6e\x61\x74\0\
\x2e\x6c\x6c\x76\x6d\x5f\x61\x64\x64\x72\x73\x69\x67\0\x6c\x69\x63\x65\x6e\x73\
\x65\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x6f\
\x64\x61\x74\x61\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\0\x4c\x49\x43\x45\x4e\x53\
\x45\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x01\0\0\0\
\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x96\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x98\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x62\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\xd8\x01\0\0\0\0\0\0\x58\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\xc1\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x30\x02\0\0\
\0\0\0\0\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\xd9\0\0\0\x01\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x3d\x02\0\0\0\0\0\0\x40\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe5\0\0\0\x01\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7d\x02\0\0\0\0\0\0\xab\x05\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0b\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x28\x08\0\0\0\0\0\0\x48\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd1\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x70\x09\0\0\0\0\0\0\xd8\0\0\0\0\0\0\0\x0e\0\0\0\x06\0\0\0\x08\0\0\0\
\0\0\0\0\x18\0\0\0\0\0\0\0\x92\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x48\x0a\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x08\0\0\0\x02\0\0\0\x08\0\0\0\0\0\0\0\
\x10\0\0\0\0\0\0\0\x5e\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x58\x0a\
\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x08\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\
\0\0\0\0\xe1\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x68\x0a\0\0\0\0\0\
\0\x30\0\0\0\0\0\0\0\x08\0\0\0\x06\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\
\x07\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x98\x0a\0\0\0\0\0\0\x10\
\x01\0\0\0\0\0\0\x08\0\0\0\x07\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xb3\0\
\0\0\x03\x4c\xff\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\xa8\x0b\0\0\0\0\0\0\x05\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc9\0\0\0\x03\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xad\x0b\0\0\0\0\0\0\xf2\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";

	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return -1;
}

#endif /* __TRACEPOINT_BPF_SKEL_H__ */
