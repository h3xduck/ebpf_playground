/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __XDP_BPF_SKEL_H__
#define __XDP_BPF_SKEL_H__

#include <stdlib.h>
#include <bpf/libbpf.h>

struct xdp_bpf {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_program *xdp_receive;
	} progs;
	struct {
		struct bpf_link *xdp_receive;
	} links;
};

static void
xdp_bpf__destroy(struct xdp_bpf *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
xdp_bpf__create_skeleton(struct xdp_bpf *obj);

static inline struct xdp_bpf *
xdp_bpf__open_opts(const struct bpf_object_open_opts *opts)
{
	struct xdp_bpf *obj;

	obj = (struct xdp_bpf *)calloc(1, sizeof(*obj));
	if (!obj)
		return NULL;
	if (xdp_bpf__create_skeleton(obj))
		goto err;
	if (bpf_object__open_skeleton(obj->skeleton, opts))
		goto err;

	return obj;
err:
	xdp_bpf__destroy(obj);
	return NULL;
}

static inline struct xdp_bpf *
xdp_bpf__open(void)
{
	return xdp_bpf__open_opts(NULL);
}

static inline int
xdp_bpf__load(struct xdp_bpf *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct xdp_bpf *
xdp_bpf__open_and_load(void)
{
	struct xdp_bpf *obj;

	obj = xdp_bpf__open();
	if (!obj)
		return NULL;
	if (xdp_bpf__load(obj)) {
		xdp_bpf__destroy(obj);
		return NULL;
	}
	return obj;
}

static inline int
xdp_bpf__attach(struct xdp_bpf *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
xdp_bpf__detach(struct xdp_bpf *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline int
xdp_bpf__create_skeleton(struct xdp_bpf *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		return -1;
	obj->skeleton = s;

	s->sz = sizeof(*s);
	s->name = "xdp_bpf";
	s->obj = &obj->obj;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "xdp_receive";
	s->progs[0].prog = &obj->progs.xdp_receive;
	s->progs[0].link = &obj->links.xdp_receive;

	s->data_sz = 2760;
	s->data = (void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x08\x08\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x0b\0\
\x0a\0\x61\x12\0\0\0\0\0\0\x61\x11\x04\0\0\0\0\0\xbf\x23\0\0\0\0\0\0\x07\x03\0\
\0\x0e\0\0\0\x2d\x13\x0c\0\0\0\0\0\xbf\x24\0\0\0\0\0\0\x07\x04\0\0\x22\0\0\0\
\x2d\x14\x09\0\0\0\0\0\x71\x34\x09\0\0\0\0\0\xb7\0\0\0\x02\0\0\0\xb7\x03\0\0\
\x02\0\0\0\x55\x04\x01\0\x06\0\0\0\xb7\x03\0\0\x01\0\0\0\x07\x02\0\0\x36\0\0\0\
\x2d\x12\x01\0\0\0\0\0\xbf\x30\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\xb7\0\0\0\x02\0\0\
\0\x95\0\0\0\0\0\0\0\x44\x75\x61\x6c\x20\x42\x53\x44\x2f\x47\x50\x4c\0\x9f\xeb\
\x01\0\x18\0\0\0\0\0\0\0\xf8\x01\0\0\xf8\x01\0\0\x41\x02\0\0\0\0\0\0\0\0\0\x02\
\x02\0\0\0\x01\0\0\0\x06\0\0\x04\x18\0\0\0\x08\0\0\0\x03\0\0\0\0\0\0\0\x0d\0\0\
\0\x03\0\0\0\x20\0\0\0\x16\0\0\0\x03\0\0\0\x40\0\0\0\x20\0\0\0\x03\0\0\0\x60\0\
\0\0\x30\0\0\0\x03\0\0\0\x80\0\0\0\x3f\0\0\0\x03\0\0\0\xa0\0\0\0\x4e\0\0\0\0\0\
\0\x08\x04\0\0\0\x54\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\x01\0\0\x0d\
\x06\0\0\0\x61\0\0\0\x01\0\0\0\x65\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\x69\0\
\0\0\x01\0\0\x0c\x05\0\0\0\x45\x01\0\0\x0b\0\0\x84\x14\0\0\0\x4b\x01\0\0\x09\0\
\0\0\0\0\0\x04\x4f\x01\0\0\x09\0\0\0\x04\0\0\x04\x57\x01\0\0\x09\0\0\0\x08\0\0\
\0\x5b\x01\0\0\x0b\0\0\0\x10\0\0\0\x63\x01\0\0\x0b\0\0\0\x20\0\0\0\x66\x01\0\0\
\x0b\0\0\0\x30\0\0\0\x6f\x01\0\0\x09\0\0\0\x40\0\0\0\x73\x01\0\0\x09\0\0\0\x48\
\0\0\0\x7c\x01\0\0\x0e\0\0\0\x50\0\0\0\x82\x01\0\0\x0f\0\0\0\x60\0\0\0\x88\x01\
\0\0\x0f\0\0\0\x80\0\0\0\x8e\x01\0\0\0\0\0\x08\x0a\0\0\0\x93\x01\0\0\0\0\0\x01\
\x01\0\0\0\x08\0\0\0\xa1\x01\0\0\0\0\0\x08\x0c\0\0\0\xa8\x01\0\0\0\0\0\x08\x0d\
\0\0\0\xae\x01\0\0\0\0\0\x01\x02\0\0\0\x10\0\0\0\xbd\x01\0\0\0\0\0\x08\x0c\0\0\
\0\xc5\x01\0\0\0\0\0\x08\x03\0\0\0\x18\x02\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\
\0\0\0\0\0\0\0\x03\0\0\0\0\x10\0\0\0\x12\0\0\0\x0d\0\0\0\x1d\x02\0\0\0\0\0\x01\
\x04\0\0\0\x20\0\0\0\x31\x02\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\0\x39\x02\0\0\x01\
\0\0\x0f\0\0\0\0\x13\0\0\0\0\0\0\0\x0d\0\0\0\0\x78\x64\x70\x5f\x6d\x64\0\x64\
\x61\x74\x61\0\x64\x61\x74\x61\x5f\x65\x6e\x64\0\x64\x61\x74\x61\x5f\x6d\x65\
\x74\x61\0\x69\x6e\x67\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x72\
\x78\x5f\x71\x75\x65\x75\x65\x5f\x69\x6e\x64\x65\x78\0\x65\x67\x72\x65\x73\x73\
\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x5f\x5f\x75\x33\x32\0\x75\x6e\x73\x69\x67\
\x6e\x65\x64\x20\x69\x6e\x74\0\x63\x74\x78\0\x69\x6e\x74\0\x78\x64\x70\x5f\x72\
\x65\x63\x65\x69\x76\x65\0\x78\x64\x70\0\x30\x3a\x30\0\x2f\x68\x6f\x6d\x65\x2f\
\x68\x33\x78\x64\x75\x63\x6b\x2f\x65\x62\x70\x66\x2d\x65\x78\x61\x6d\x70\x6c\
\x65\x73\x2f\x73\x72\x63\x2f\x65\x62\x70\x66\x2f\x78\x64\x70\x2e\x62\x70\x66\
\x2e\x63\0\x20\x20\x20\x20\x76\x6f\x69\x64\x20\x2a\x64\x61\x74\x61\x20\x3d\x20\
\x28\x76\x6f\x69\x64\x20\x2a\x29\x28\x6c\x6f\x6e\x67\x29\x63\x74\x78\x2d\x3e\
\x64\x61\x74\x61\x3b\0\x30\x3a\x31\0\x20\x20\x20\x20\x76\x6f\x69\x64\x20\x2a\
\x64\x61\x74\x61\x5f\x65\x6e\x64\x20\x3d\x20\x28\x76\x6f\x69\x64\x20\x2a\x29\
\x28\x6c\x6f\x6e\x67\x29\x63\x74\x78\x2d\x3e\x64\x61\x74\x61\x5f\x65\x6e\x64\
\x3b\0\x20\x20\x20\x20\x69\x66\x20\x28\x28\x76\x6f\x69\x64\x20\x2a\x29\x65\x74\
\x68\x20\x2b\x20\x73\x69\x7a\x65\x6f\x66\x28\x73\x74\x72\x75\x63\x74\x20\x65\
\x74\x68\x68\x64\x72\x29\x20\x3e\x20\x64\x61\x74\x61\x5f\x65\x6e\x64\x29\x7b\0\
\x69\x70\x68\x64\x72\0\x69\x68\x6c\0\x76\x65\x72\x73\x69\x6f\x6e\0\x74\x6f\x73\
\0\x74\x6f\x74\x5f\x6c\x65\x6e\0\x69\x64\0\x66\x72\x61\x67\x5f\x6f\x66\x66\0\
\x74\x74\x6c\0\x70\x72\x6f\x74\x6f\x63\x6f\x6c\0\x63\x68\x65\x63\x6b\0\x73\x61\
\x64\x64\x72\0\x64\x61\x64\x64\x72\0\x5f\x5f\x75\x38\0\x75\x6e\x73\x69\x67\x6e\
\x65\x64\x20\x63\x68\x61\x72\0\x5f\x5f\x62\x65\x31\x36\0\x5f\x5f\x75\x31\x36\0\
\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\x74\0\x5f\x5f\x73\x75\x6d\
\x31\x36\0\x5f\x5f\x62\x65\x33\x32\0\x30\x3a\x37\0\x20\x20\x20\x20\x73\x77\x69\
\x74\x63\x68\x28\x69\x70\x2d\x3e\x70\x72\x6f\x74\x6f\x63\x6f\x6c\x29\x7b\0\x20\
\x20\x20\x20\x69\x66\x20\x28\x67\x65\x74\x5f\x70\x72\x6f\x74\x6f\x63\x6f\x6c\
\x28\x64\x61\x74\x61\x29\x20\x21\x3d\x20\x49\x50\x50\x52\x4f\x54\x4f\x5f\x54\
\x43\x50\x29\x7b\0\x7d\0\x63\x68\x61\x72\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\
\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x4c\x49\x43\x45\x4e\x53\x45\0\x6c\
\x69\x63\x65\x6e\x73\x65\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x14\0\0\0\x14\0\0\0\
\x7c\0\0\0\x90\0\0\0\x3c\0\0\0\x08\0\0\0\x75\0\0\0\x01\0\0\0\0\0\0\0\x07\0\0\0\
\x10\0\0\0\x75\0\0\0\x07\0\0\0\0\0\0\0\x7d\0\0\0\xac\0\0\0\x25\x6c\0\0\x08\0\0\
\0\x7d\0\0\0\xda\0\0\0\x29\x68\0\0\x10\0\0\0\x7d\0\0\0\x0c\x01\0\0\x15\x94\0\0\
\x20\0\0\0\x7d\0\0\0\x0c\x01\0\0\x09\x94\0\0\x40\0\0\0\x7d\0\0\0\xd0\x01\0\0\
\x10\x34\0\0\x50\0\0\0\x7d\0\0\0\xea\x01\0\0\x09\xb8\0\0\x88\0\0\0\x7d\0\0\0\
\x16\x02\0\0\x01\xec\0\0\x10\0\0\0\x75\0\0\0\x03\0\0\0\0\0\0\0\x02\0\0\0\x79\0\
\0\0\0\0\0\0\x08\0\0\0\x02\0\0\0\xd6\0\0\0\0\0\0\0\x40\0\0\0\x08\0\0\0\xcc\x01\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x69\0\
\0\0\0\0\x02\0\x68\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x62\0\0\0\0\0\x02\0\x80\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x5b\0\0\0\0\0\x02\0\x88\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x03\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x53\0\0\0\x11\0\x03\0\0\0\
\0\0\0\0\0\0\x0d\0\0\0\0\0\0\0\x26\0\0\0\x12\0\x02\0\0\0\0\0\0\0\0\0\x98\0\0\0\
\0\0\0\0\x08\x02\0\0\0\0\0\0\0\0\0\0\x05\0\0\0\x2c\0\0\0\0\0\0\0\0\0\0\0\x04\0\
\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\x50\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\
\x60\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\x70\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\x80\0\
\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\x90\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\xa0\0\0\0\0\
\0\0\0\0\0\0\0\x04\0\0\0\xbc\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\xcc\0\0\0\0\0\0\0\
\0\0\0\0\x04\0\0\0\xdc\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\x0c\x0b\0\x2e\x74\x65\
\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\x74\0\x78\x64\x70\0\x2e\
\x6c\x6c\x76\x6d\x5f\x61\x64\x64\x72\x73\x69\x67\0\x78\x64\x70\x5f\x72\x65\x63\
\x65\x69\x76\x65\0\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x73\x74\x72\x74\x61\x62\0\
\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\0\x4c\x49\x43\
\x45\x4e\x53\x45\0\x4c\x42\x42\x30\x5f\x37\0\x4c\x42\x42\x30\x5f\x36\0\x4c\x42\
\x42\x30\x5f\x34\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x01\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x14\0\0\0\x01\0\
\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x98\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x32\0\0\0\x01\0\0\0\x03\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xd8\0\0\0\0\0\0\0\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x4e\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\xe5\0\0\0\0\0\0\0\x51\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x0b\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x36\x05\0\0\
\0\0\0\0\xec\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x42\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x28\x06\0\0\0\0\0\0\xa8\0\
\0\0\0\0\0\0\x0a\0\0\0\x05\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x4a\0\0\0\
\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd0\x06\0\0\0\0\0\0\x10\0\0\0\0\0\0\
\0\x06\0\0\0\x04\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x07\0\0\0\x09\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe0\x06\0\0\0\0\0\0\xb0\0\0\0\0\0\0\0\x06\0\0\
\0\x05\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x18\0\0\0\x03\x4c\xff\x6f\0\0\
\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\x90\x07\0\0\0\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x3a\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x92\x07\0\0\0\0\0\0\x70\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0";

	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return -1;
}

#endif /* __XDP_BPF_SKEL_H__ */
